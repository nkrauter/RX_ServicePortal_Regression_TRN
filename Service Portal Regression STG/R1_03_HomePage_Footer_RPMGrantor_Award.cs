///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Service_Portal_Regression_STG
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The R1_03_HomePage_Footer_RPMGrantor_Award recording.
    /// </summary>
    [TestModule("651966e7-7522-4081-8aa4-484db859120b", ModuleType.Recording, 1)]
    public partial class R1_03_HomePage_Footer_RPMGrantor_Award : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Service_Portal_Regression_TSTRepository repository.
        /// </summary>
        public static Service_Portal_Regression_TSTRepository repo = Service_Portal_Regression_TSTRepository.Instance;

        static R1_03_HomePage_Footer_RPMGrantor_Award instance = new R1_03_HomePage_Footer_RPMGrantor_Award();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public R1_03_HomePage_Footer_RPMGrantor_Award()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static R1_03_HomePage_Footer_RPMGrantor_Award Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Footer Links
            Report.Log(ReportLevel.Info, "Section", "Footer Links", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(1));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 79;61.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(2));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("79;61");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(3));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Award') on item 'Login.NgScope2.Award'.", repo.Login.NgScope2.AwardInfo, new RecordItemIndex(4));
                Validate.AttributeEqual(repo.Login.NgScope2.AwardInfo, "InnerText", "Award", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Award') on item 'Login.NgScope2.Award1'.", repo.Login.NgScope2.Award1Info, new RecordItemIndex(5));
                Validate.AttributeEqual(repo.Login.NgScope2.Award1Info, "InnerText", "Award", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Post Award Activities') on item 'Login.NgScope2.PostAwardActivities'.", repo.Login.NgScope2.PostAwardActivitiesInfo, new RecordItemIndex(6));
                Validate.AttributeEqual(repo.Login.NgScope2.PostAwardActivitiesInfo, "InnerText", "Post Award Activities", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Performance Reports') on item 'Login.NgScope2.PerformanceReports'.", repo.Login.NgScope2.PerformanceReportsInfo, new RecordItemIndex(7));
                Validate.AttributeEqual(repo.Login.NgScope2.PerformanceReportsInfo, "InnerText", "Performance Reports", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Performance Report Details') on item 'Login.NgScope2.PerformanceReportDetails'.", repo.Login.NgScope2.PerformanceReportDetailsInfo, new RecordItemIndex(8));
                Validate.AttributeEqual(repo.Login.NgScope2.PerformanceReportDetailsInfo, "InnerText", "Performance Report Details", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Performance Dashboard') on item 'Login.NgScope2.PerformanceDashboard'.", repo.Login.NgScope2.PerformanceDashboardInfo, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.Login.NgScope2.PerformanceDashboardInfo, "InnerText", "Performance Dashboard", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Awards Dashboard') on item 'Login.NgScope2.AwardsDashboard1'.", repo.Login.NgScope2.AwardsDashboard1Info, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.Login.NgScope2.AwardsDashboard1Info, "InnerText", "Awards Dashboard", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Navigate to Ariba') on item 'Login.NgScope2.NavigateToAriba1'.", repo.Login.NgScope2.NavigateToAriba1Info, new RecordItemIndex(11));
                Validate.AttributeEqual(repo.Login.NgScope2.NavigateToAriba1Info, "InnerText", "Navigate to Ariba", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Navigate to eFiling') on item 'Login.NgScope2.NavigateToEFiling1'.", repo.Login.NgScope2.NavigateToEFiling1Info, new RecordItemIndex(12));
                Validate.AttributeEqual(repo.Login.NgScope2.NavigateToEFiling1Info, "InnerText", "Navigate to eFiling", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            // Pre-Award Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(13));
            
            // Award
            Report.Log(ReportLevel.Info, "Section", "Award", new RecordItemIndex(14));
            
            // Footer - FO
            Report.Log(ReportLevel.Info, "Mouse", "Footer - FO\r\nMouse Left Click item 'Login.NgScope2.Award1' at 34;7.", repo.Login.NgScope2.Award1Info, new RecordItemIndex(15));
            repo.Login.NgScope2.Award1.Click("34;7");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(16));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Notice of Awards') on item 'Login.FormInlinePanelHeading.NoticeOfAwards'.", repo.Login.FormInlinePanelHeading.NoticeOfAwardsInfo, new RecordItemIndex(17));
                Validate.AttributeEqual(repo.Login.FormInlinePanelHeading.NoticeOfAwardsInfo, "InnerText", "Notice of Awards", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            // Award Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 79;61.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(19));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("79;61");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(20));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // PAA
            Report.Log(ReportLevel.Info, "Section", "PAA", new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(22));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            // Footer - Application
            Report.Log(ReportLevel.Info, "Mouse", "Footer - Application\r\nMouse Left Click item 'Login.NgScope2.PostAwardActivities' at 70;14.", repo.Login.NgScope2.PostAwardActivitiesInfo, new RecordItemIndex(23));
            repo.Login.NgScope2.PostAwardActivities.Click("70;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(24));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Post Award Activities') on item 'Login.FormInlinePanelHeading.PostAwardActivities'.", repo.Login.FormInlinePanelHeading.PostAwardActivitiesInfo, new RecordItemIndex(25));
                Validate.AttributeEqual(repo.Login.FormInlinePanelHeading.PostAwardActivitiesInfo, "InnerText", "Post Award Activities", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(25)); }
            
            // PAA Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(26));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 74;49.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(27));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("74;49");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(28));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // Performance Reports
            Report.Log(ReportLevel.Info, "Section", "Performance Reports", new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(30));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NgScope2.PerformanceReports' at 70;14.", repo.Login.NgScope2.PerformanceReportsInfo, new RecordItemIndex(31));
            repo.Login.NgScope2.PerformanceReports.Click("70;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(32));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Performance Reports') on item 'Login.FormInlinePanelHeading.PerformanceReports'.", repo.Login.FormInlinePanelHeading.PerformanceReportsInfo, new RecordItemIndex(33));
                Validate.AttributeEqual(repo.Login.FormInlinePanelHeading.PerformanceReportsInfo, "InnerText", "Performance Reports", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(33)); }
            
            // Performance Report Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 82;51.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(35));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("82;51");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(36));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // Performance Report Details
            Report.Log(ReportLevel.Info, "Section", "Performance Report Details", new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(38));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NgScope2.PerformanceReportDetails' at 45;11.", repo.Login.NgScope2.PerformanceReportDetailsInfo, new RecordItemIndex(39));
            repo.Login.NgScope2.PerformanceReportDetails.Click("45;11");
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Performance Report Details') on item 'Login.NgScope2.PerformanceReportDetails'.", repo.Login.NgScope2.PerformanceReportDetailsInfo, new RecordItemIndex(40));
                Validate.AttributeEqual(repo.Login.NgScope2.PerformanceReportDetailsInfo, "InnerText", "Performance Report Details", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(40)); }
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(41));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            // Performance Report Details Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 79;61.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(43));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("79;61");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(44));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(100);
            
            // Performance Dashboard
            Report.Log(ReportLevel.Info, "Section", "Performance Dashboard", new RecordItemIndex(45));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(46));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NgScope2.PerformanceDashboard' at 70;14.", repo.Login.NgScope2.PerformanceDashboardInfo, new RecordItemIndex(47));
            repo.Login.NgScope2.PerformanceDashboard.Click("70;14");
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='\n  Work Plan - Activities Status\n ') on item 'Login.RowSpRowContent.DivTagWorkPlanActivitiesStatus'.", repo.Login.RowSpRowContent.DivTagWorkPlanActivitiesStatusInfo, new RecordItemIndex(48));
                Validate.AttributeEqual(repo.Login.RowSpRowContent.DivTagWorkPlanActivitiesStatusInfo, "InnerText", "\n  Work Plan - Activities Status\n ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(48)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='\n  Performance Report - Submission Status\n ') on item 'Login.RowSpRowContent.DivTagPerformanceReportSubmission'.", repo.Login.RowSpRowContent.DivTagPerformanceReportSubmissionInfo, new RecordItemIndex(49));
                Validate.AttributeEqual(repo.Login.RowSpRowContent.DivTagPerformanceReportSubmissionInfo, "InnerText", "\n  Performance Report - Submission Status\n ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(49)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='\n  Performance Report - Approval Status\n ') on item 'Login.RowSpRowContent.DivTagPerformanceReportApprovalS'.", repo.Login.RowSpRowContent.DivTagPerformanceReportApprovalSInfo, new RecordItemIndex(50));
                Validate.AttributeEqual(repo.Login.RowSpRowContent.DivTagPerformanceReportApprovalSInfo, "InnerText", "\n  Performance Report - Approval Status\n ", null, false);
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(50)); }
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(51));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(52));
            Delay.Duration(1000, false);
            
            // Performance Dashboard Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(53));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 79;61.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(54));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("79;61");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(55));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(100);
            
            // Awards Dashboard
            Report.Log(ReportLevel.Info, "Section", "Awards Dashboard", new RecordItemIndex(56));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -840 units.", new RecordItemIndex(57));
            Mouse.ScrollWheel(-840);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NgScope2.AwardsDashboard1' at 70;14.", repo.Login.NgScope2.AwardsDashboard1Info, new RecordItemIndex(58));
            repo.Login.NgScope2.AwardsDashboard1.Click("70;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(59));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'Login.DivTagNoticeOfAwardStatus'.", repo.Login.DivTagNoticeOfAwardStatusInfo, new RecordItemIndex(60));
                Validate.Exists(repo.Login.DivTagNoticeOfAwardStatusInfo, null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(60)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating Exists on item 'Login.DivTagPostAwardActivitiesStatus'.", repo.Login.DivTagPostAwardActivitiesStatusInfo, new RecordItemIndex(61));
                Validate.Exists(repo.Login.DivTagPostAwardActivitiesStatusInfo, null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(61)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='') on item 'Login.Highcharts66mqfmg38.Path'.", repo.Login.Highcharts66mqfmg38.PathInfo, new RecordItemIndex(62));
                Validate.AttributeEqual(repo.Login.Highcharts66mqfmg38.PathInfo, "InnerText", "", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(62)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='') on item 'Login.Highcharts66mqfmg38.Path1'.", repo.Login.Highcharts66mqfmg38.Path1Info, new RecordItemIndex(63));
                Validate.AttributeEqual(repo.Login.Highcharts66mqfmg38.Path1Info, "InnerText", "", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(63)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='') on item 'Login.Highcharts66mqfmg38.Path2'.", repo.Login.Highcharts66mqfmg38.Path2Info, new RecordItemIndex(64));
                Validate.AttributeEqual(repo.Login.Highcharts66mqfmg38.Path2Info, "InnerText", "", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(64)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='') on item 'Login.Highcharts66mqfmg38.Path3'.", repo.Login.Highcharts66mqfmg38.Path3Info, new RecordItemIndex(65));
                Validate.AttributeEqual(repo.Login.Highcharts66mqfmg38.Path3Info, "InnerText", "", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(65)); }
            
            // Awards Dashboard Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(66));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login.NavNavbarNavSamsNavbarNav.ATagHome' at 79;61.", repo.Login.NavNavbarNavSamsNavbarNav.ATagHomeInfo, new RecordItemIndex(67));
            repo.Login.NavNavbarNavSamsNavbarNav.ATagHome.Click("79;61");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking WaitForDocumentLoaded() on item 'Login'.", repo.Login.SelfInfo, new RecordItemIndex(68));
            repo.Login.Self.WaitForDocumentLoaded();
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
