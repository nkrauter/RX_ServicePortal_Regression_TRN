///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Service_Portal_Regression_STG
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The R1_05_HomePage_TilesHeader_RPMAdmin_Planning recording.
    /// </summary>
    [TestModule("abb785a4-c2d3-456f-8b64-d228d5166594", ModuleType.Recording, 1)]
    public partial class R1_05_HomePage_TilesHeader_RPMAdmin_Planning : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Service_Portal_Regression_STGRepository repository.
        /// </summary>
        public static Service_Portal_Regression_STGRepository repo = Service_Portal_Regression_STGRepository.Instance;

        static R1_05_HomePage_TilesHeader_RPMAdmin_Planning instance = new R1_05_HomePage_TilesHeader_RPMAdmin_Planning();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public R1_05_HomePage_TilesHeader_RPMAdmin_Planning()
        {
            RPM_Admin_WM = "Hi, Chandler Bing!";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static R1_05_HomePage_TilesHeader_RPMAdmin_Planning Instance
        {
            get { return instance; }
        }

#region Variables

        string _RPM_Admin_WM;

        /// <summary>
        /// Gets or sets the value of variable RPM_Admin_WM.
        /// </summary>
        [TestVariable("dcaee271-eb61-4f1d-975a-84d1a5fae004")]
        public string RPM_Admin_WM
        {
            get { return _RPM_Admin_WM; }
            set { _RPM_Admin_WM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 30;
            Delay.SpeedFactor = 1.00;

            Init();

            // Header Links
            Report.Log(ReportLevel.Info, "Section", "Header Links", new RecordItemIndex(0));
            
            // Planning Tile
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nPlanning Tile\r\nValidating AttributeEqual (InnerText=' Planning ') on item 'Login1.NavNavbarNavSamsNavbarNav.ATagPlanning'.", repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, new RecordItemIndex(1));
                Validate.AttributeEqual(repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, "InnerText", " Planning ", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            // Planning Tile
            Report.Log(ReportLevel.Info, "Mouse", "Planning Tile\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.ATagPlanning' at 109;58.", repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, new RecordItemIndex(2));
            repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanning.Click("109;58");
            Delay.Milliseconds(200);
            
            // Planning -> Programs
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nPlanning -> Programs\r\nValidating AttributeEqual (InnerText='Programs') on item 'Login1.NavNavbarNavSamsNavbarNav.Programs1'.", repo.Login1.NavNavbarNavSamsNavbarNav.Programs1Info, new RecordItemIndex(3));
                Validate.AttributeEqual(repo.Login1.NavNavbarNavSamsNavbarNav.Programs1Info, "InnerText", "Programs", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            // Planning -> Projects
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nPlanning -> Projects\r\nValidating AttributeEqual (InnerText='Projects') on item 'Login1.NavNavbarNavSamsNavbarNav.Projects'.", repo.Login1.NavNavbarNavSamsNavbarNav.ProjectsInfo, new RecordItemIndex(4));
                Validate.AttributeEqual(repo.Login1.NavNavbarNavSamsNavbarNav.ProjectsInfo, "InnerText", "Projects", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Themes') on item 'Login1.NavNavbarNavSamsNavbarNav.Themes'.", repo.Login1.NavNavbarNavSamsNavbarNav.ThemesInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Login1.NavNavbarNavSamsNavbarNav.ThemesInfo, "InnerText", "Themes");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Indicators') on item 'Login1.NavNavbarNavSamsNavbarNav.Indicators'.", repo.Login1.NavNavbarNavSamsNavbarNav.IndicatorsInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Login1.NavNavbarNavSamsNavbarNav.IndicatorsInfo, "InnerText", "Indicators");
            Delay.Milliseconds(100);
            
            // Homepage Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(7));
            
            // Programs
            Report.Log(ReportLevel.Info, "Section", "Programs", new RecordItemIndex(8));
            
            // Planning -> Programs
            Report.Log(ReportLevel.Info, "Mouse", "Planning -> Programs\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.Programs1' at 59;23.", repo.Login1.NavNavbarNavSamsNavbarNav.Programs1Info, new RecordItemIndex(9));
            repo.Login1.NavNavbarNavSamsNavbarNav.Programs1.Click("59;23");
            Delay.Milliseconds(200);
            
            // Program Table
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nProgram Table\r\nValidating AttributeEqual (InnerText='Federal Assistance Programs') on item 'Login1.FormInlinePanelHeading.FederalAssistancePrograms'.", repo.Login1.FormInlinePanelHeading.FederalAssistanceProgramsInfo, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.Login1.FormInlinePanelHeading.FederalAssistanceProgramsInfo, "InnerText", "Federal Assistance Programs", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            // Program Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(11));
            
            // Home Button
            Report.Log(ReportLevel.Info, "Mouse", "Home Button\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.HOME' at 12;9.", repo.Login1.NavNavbarNavSamsNavbarNav.HOMEInfo, new RecordItemIndex(12));
            repo.Login1.NavNavbarNavSamsNavbarNav.HOME.Click("12;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'InnerText' to equal the specified value $RPM_Admin_WM. Associated repository item: 'Login1.HiChandlerBing'", repo.Login1.HiChandlerBingInfo, new RecordItemIndex(13));
            repo.Login1.HiChandlerBingInfo.WaitForAttributeEqual(5000, "InnerText", RPM_Admin_WM);
            
            // Projects
            Report.Log(ReportLevel.Info, "Section", "Projects", new RecordItemIndex(14));
            
            // Planning Tile
            Report.Log(ReportLevel.Info, "Mouse", "Planning Tile\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.ATagPlanning' at 87;67.", repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, new RecordItemIndex(15));
            repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanning.Click("87;67");
            Delay.Milliseconds(200);
            
            // Planning -> Projects
            Report.Log(ReportLevel.Info, "Mouse", "Planning -> Projects\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.Projects' at 77;12.", repo.Login1.NavNavbarNavSamsNavbarNav.ProjectsInfo, new RecordItemIndex(16));
            repo.Login1.NavNavbarNavSamsNavbarNav.Projects.Click("77;12");
            Delay.Milliseconds(200);
            
            // Project Table
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nProject Table\r\nValidating AttributeEqual (InnerText='Federal Assistance Projects') on item 'Login1.FormInlinePanelHeading.FederalAssistanceProjects'.", repo.Login1.FormInlinePanelHeading.FederalAssistanceProjectsInfo, new RecordItemIndex(17));
                Validate.AttributeEqual(repo.Login1.FormInlinePanelHeading.FederalAssistanceProjectsInfo, "InnerText", "Federal Assistance Projects", null, new Validate.Options(){ReportScreenshot=Validate.ResultOption.OnFail});
                Delay.Milliseconds(100);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            // Project Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(18));
            
            // Home Button
            Report.Log(ReportLevel.Info, "Mouse", "Home Button\r\nMouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.HOME' at 12;9.", repo.Login1.NavNavbarNavSamsNavbarNav.HOMEInfo, new RecordItemIndex(19));
            repo.Login1.NavNavbarNavSamsNavbarNav.HOME.Click("12;9");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'InnerText' to equal the specified value $RPM_Admin_WM. Associated repository item: 'Login1.HiChandlerBing'", repo.Login1.HiChandlerBingInfo, new RecordItemIndex(20));
            repo.Login1.HiChandlerBingInfo.WaitForAttributeEqual(5000, "InnerText", RPM_Admin_WM);
            
            // Themes
            Report.Log(ReportLevel.Info, "Section", "Themes", new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.ATagPlanning' at 69;35.", repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, new RecordItemIndex(22));
            repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanning.Click("69;35");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.Themes' at 48;12.", repo.Login1.NavNavbarNavSamsNavbarNav.ThemesInfo, new RecordItemIndex(23));
            repo.Login1.NavNavbarNavSamsNavbarNav.Themes.Click("48;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Themes') on item 'Login1.FormInlinePanelHeading.Themes'.", repo.Login1.FormInlinePanelHeading.ThemesInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.Login1.FormInlinePanelHeading.ThemesInfo, "InnerText", "Themes");
            Delay.Milliseconds(100);
            
            // Themes Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.HOME' at 12;5.", repo.Login1.NavNavbarNavSamsNavbarNav.HOMEInfo, new RecordItemIndex(26));
            repo.Login1.NavNavbarNavSamsNavbarNav.HOME.Click("12;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'InnerText' to equal the specified value $RPM_Admin_WM. Associated repository item: 'Login1.HiChandlerBing'", repo.Login1.HiChandlerBingInfo, new RecordItemIndex(27));
            repo.Login1.HiChandlerBingInfo.WaitForAttributeEqual(5000, "InnerText", RPM_Admin_WM);
            
            // Indicators
            Report.Log(ReportLevel.Info, "Section", "Indicators", new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.ATagPlanning' at 55;35.", repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanningInfo, new RecordItemIndex(29));
            repo.Login1.NavNavbarNavSamsNavbarNav.ATagPlanning.Click("55;35");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.Indicators' at 50;10.", repo.Login1.NavNavbarNavSamsNavbarNav.IndicatorsInfo, new RecordItemIndex(30));
            repo.Login1.NavNavbarNavSamsNavbarNav.Indicators.Click("50;10");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Login1.FormInlinePanelHeading.Indicators'.", repo.Login1.FormInlinePanelHeading.IndicatorsInfo, new RecordItemIndex(31));
            Validate.Exists(repo.Login1.FormInlinePanelHeading.IndicatorsInfo);
            Delay.Milliseconds(100);
            
            // Indicators Table Screenshot
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.NavNavbarNavSamsNavbarNav.HOME' at 12;5.", repo.Login1.NavNavbarNavSamsNavbarNav.HOMEInfo, new RecordItemIndex(33));
            repo.Login1.NavNavbarNavSamsNavbarNav.HOME.Click("12;5");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'InnerText' to equal the specified value $RPM_Admin_WM. Associated repository item: 'Login1.HiChandlerBing'", repo.Login1.HiChandlerBingInfo, new RecordItemIndex(34));
            repo.Login1.HiChandlerBingInfo.WaitForAttributeEqual(5000, "InnerText", RPM_Admin_WM);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
