///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Service_Portal_Regression_STG
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates recording.
    /// </summary>
    [TestModule("490317b1-60b6-4329-b114-bf458ed53bed", ModuleType.Recording, 1)]
    public partial class R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Service_Portal_Regression_STGRepository repository.
        /// </summary>
        public static Service_Portal_Regression_STGRepository repo = Service_Portal_Regression_STGRepository.Instance;

        static R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates instance = new R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates()
        {
            Due_Date = "2020-11-26 23:59:59";
            Estimated_Project_Start_Date = "2021-01-21 23:59:59";
            Estimated_Project_End_Date = "2021-06-24 23:59:59";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static R4_01_FO_New_DomesticGrantor_FormFill_SynopsisDates Instance
        {
            get { return instance; }
        }

#region Variables

        string _Due_Date;

        /// <summary>
        /// Gets or sets the value of variable Due_Date.
        /// </summary>
        [TestVariable("89a4493b-6b81-41e1-b6e4-3c506af0e2e2")]
        public string Due_Date
        {
            get { return _Due_Date; }
            set { _Due_Date = value; }
        }

        string _Estimated_Project_Start_Date;

        /// <summary>
        /// Gets or sets the value of variable Estimated_Project_Start_Date.
        /// </summary>
        [TestVariable("dc4afe20-0fde-4a90-b9c9-81e63edd0450")]
        public string Estimated_Project_Start_Date
        {
            get { return _Estimated_Project_Start_Date; }
            set { _Estimated_Project_Start_Date = value; }
        }

        string _Estimated_Project_End_Date;

        /// <summary>
        /// Gets or sets the value of variable Estimated_Project_End_Date.
        /// </summary>
        [TestVariable("f51e16d6-ef29-442c-bdc1-d1dd66469a11")]
        public string Estimated_Project_End_Date
        {
            get { return _Estimated_Project_End_Date; }
            set { _Estimated_Project_End_Date = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 30;
            Delay.SpeedFactor = 1.00;

            Init();

            // Due Date
            Report.Log(ReportLevel.Info, "Section", "Due Date", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Login1.SpFormfieldDueDate'.", repo.Login1.SpFormfieldDueDateInfo, new RecordItemIndex(1));
            Keyboard.PrepareFocus(repo.Login1.SpFormfieldDueDate);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Due_Date' with focus on 'Login1.SpFormfieldDueDate'.", repo.Login1.SpFormfieldDueDateInfo, new RecordItemIndex(2));
            repo.Login1.SpFormfieldDueDate.PressKeys(Due_Date);
            Delay.Milliseconds(30);
            
            // Estimated Project Start Date
            Report.Log(ReportLevel.Info, "Section", "Estimated Project Start Date", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldExpectedStart' at 215;18.", repo.Login1.SpFormfieldExpectedStartInfo, new RecordItemIndex(4));
            repo.Login1.SpFormfieldExpectedStart.Click("215;18");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Login1.SpFormfieldExpectedStart'.", repo.Login1.SpFormfieldExpectedStartInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.Login1.SpFormfieldExpectedStart);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Estimated_Project_Start_Date' with focus on 'Login1.SpFormfieldExpectedStart'.", repo.Login1.SpFormfieldExpectedStartInfo, new RecordItemIndex(6));
            repo.Login1.SpFormfieldExpectedStart.PressKeys(Estimated_Project_Start_Date);
            Delay.Milliseconds(30);
            
            // Estimated Project End Date
            Report.Log(ReportLevel.Info, "Section", "Estimated Project End Date", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUExpectedEnd' at 301;33.", repo.Login1.SpFormfieldUExpectedEndInfo, new RecordItemIndex(8));
            repo.Login1.SpFormfieldUExpectedEnd.Click("301;33");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Login1.SpFormfieldUExpectedEnd'.", repo.Login1.SpFormfieldUExpectedEndInfo, new RecordItemIndex(9));
            Keyboard.PrepareFocus(repo.Login1.SpFormfieldUExpectedEnd);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Estimated_Project_End_Date' with focus on 'Login1.SpFormfieldUExpectedEnd'.", repo.Login1.SpFormfieldUExpectedEndInfo, new RecordItemIndex(10));
            repo.Login1.SpFormfieldUExpectedEnd.PressKeys(Estimated_Project_End_Date);
            Delay.Milliseconds(30);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
