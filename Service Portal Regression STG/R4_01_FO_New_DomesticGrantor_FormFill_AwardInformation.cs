///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Service_Portal_Regression_STG
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation recording.
    /// </summary>
    [TestModule("0ce55ceb-8d24-41e5-a335-40b1f743024f", ModuleType.Recording, 1)]
    public partial class R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Service_Portal_Regression_STGRepository repository.
        /// </summary>
        public static Service_Portal_Regression_STGRepository repo = Service_Portal_Regression_STGRepository.Instance;

        static R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation instance = new R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation()
        {
            Cost_Sharing_or_Matching_Requirement = "No{Down}";
            Award_Ceiling = "1000";
            Award_Floor = "300";
            Estimated_Funding = "2000";
            Expected_Number_of_Applications = "100";
            Expected_Number_of_Awards = "10";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static R4_01_FO_New_DomesticGrantor_FormFill_AwardInformation Instance
        {
            get { return instance; }
        }

#region Variables

        string _Cost_Sharing_or_Matching_Requirement;

        /// <summary>
        /// Gets or sets the value of variable Cost_Sharing_or_Matching_Requirement.
        /// </summary>
        [TestVariable("ea9c2996-6088-4e65-9a0b-945ed3691aa9")]
        public string Cost_Sharing_or_Matching_Requirement
        {
            get { return _Cost_Sharing_or_Matching_Requirement; }
            set { _Cost_Sharing_or_Matching_Requirement = value; }
        }

        string _Award_Ceiling;

        /// <summary>
        /// Gets or sets the value of variable Award_Ceiling.
        /// </summary>
        [TestVariable("4c7232f1-05dd-4426-aa0e-175b890b8974")]
        public string Award_Ceiling
        {
            get { return _Award_Ceiling; }
            set { _Award_Ceiling = value; }
        }

        string _Award_Floor;

        /// <summary>
        /// Gets or sets the value of variable Award_Floor.
        /// </summary>
        [TestVariable("dd304631-5205-4b50-a777-222bcac8d46b")]
        public string Award_Floor
        {
            get { return _Award_Floor; }
            set { _Award_Floor = value; }
        }

        string _Estimated_Funding;

        /// <summary>
        /// Gets or sets the value of variable Estimated_Funding.
        /// </summary>
        [TestVariable("5d7bf5cf-f909-455b-8529-f740d0fd745c")]
        public string Estimated_Funding
        {
            get { return _Estimated_Funding; }
            set { _Estimated_Funding = value; }
        }

        string _Expected_Number_of_Applications;

        /// <summary>
        /// Gets or sets the value of variable Expected_Number_of_Applications.
        /// </summary>
        [TestVariable("5e501a5d-e5d1-48fc-975e-73096964b18d")]
        public string Expected_Number_of_Applications
        {
            get { return _Expected_Number_of_Applications; }
            set { _Expected_Number_of_Applications = value; }
        }

        string _Expected_Number_of_Awards;

        /// <summary>
        /// Gets or sets the value of variable Expected_Number_of_Awards.
        /// </summary>
        [TestVariable("89d41cd6-9e76-4370-808c-49043e99c425")]
        public string Expected_Number_of_Awards
        {
            get { return _Expected_Number_of_Awards; }
            set { _Expected_Number_of_Awards = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 30;
            Delay.SpeedFactor = 1.00;

            Init();

            // Cost Sharing or Matching Requirement
            Report.Log(ReportLevel.Info, "Section", "Cost Sharing or Matching Requirement", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUAwardCeiling' at 170;21.", repo.Login1.SpFormfieldUAwardCeilingInfo, new RecordItemIndex(1));
            repo.Login1.SpFormfieldUAwardCeiling.Click("170;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LShiftKey down}{Tab}{LShiftKey up}' with focus on 'Login1.SpFormfieldUAwardCeiling'.", repo.Login1.SpFormfieldUAwardCeilingInfo, new RecordItemIndex(2));
            repo.Login1.SpFormfieldUAwardCeiling.EnsureVisible();
            Keyboard.Press("{LShiftKey down}{Tab}{LShiftKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Cost_Sharing_or_Matching_Requirement'.", new RecordItemIndex(3));
            Keyboard.Press(Cost_Sharing_or_Matching_Requirement);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{enter}'.", new RecordItemIndex(5));
            Keyboard.Press("{enter}");
            Delay.Milliseconds(0);
            
            // Award Ceiling
            Report.Log(ReportLevel.Info, "Section", "Award Ceiling", new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUAwardCeiling' at 170;21.", repo.Login1.SpFormfieldUAwardCeilingInfo, new RecordItemIndex(7));
            repo.Login1.SpFormfieldUAwardCeiling.Click("170;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Award_Ceiling' with focus on 'Login1.SpFormfieldUAwardCeiling'.", repo.Login1.SpFormfieldUAwardCeilingInfo, new RecordItemIndex(8));
            repo.Login1.SpFormfieldUAwardCeiling.EnsureVisible();
            Keyboard.Press(Award_Ceiling);
            Delay.Milliseconds(0);
            
            // Award Floor
            Report.Log(ReportLevel.Info, "Section", "Award Floor", new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUAwardFloor' at 132;26.", repo.Login1.SpFormfieldUAwardFloorInfo, new RecordItemIndex(10));
            repo.Login1.SpFormfieldUAwardFloor.Click("132;26");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Award_Floor' with focus on 'Login1.SpFormfieldUAwardFloor'.", repo.Login1.SpFormfieldUAwardFloorInfo, new RecordItemIndex(11));
            repo.Login1.SpFormfieldUAwardFloor.EnsureVisible();
            Keyboard.Press(Award_Floor);
            Delay.Milliseconds(0);
            
            // Estimated Funding
            Report.Log(ReportLevel.Info, "Section", "Estimated Funding", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUEstimatedFunding' at 109;16.", repo.Login1.SpFormfieldUEstimatedFundingInfo, new RecordItemIndex(13));
            repo.Login1.SpFormfieldUEstimatedFunding.Click("109;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Estimated_Funding' with focus on 'Login1.SpFormfieldUEstimatedFunding'.", repo.Login1.SpFormfieldUEstimatedFundingInfo, new RecordItemIndex(14));
            repo.Login1.SpFormfieldUEstimatedFunding.EnsureVisible();
            Keyboard.Press(Estimated_Funding);
            Delay.Milliseconds(0);
            
            // Expected Number of Applications
            Report.Log(ReportLevel.Info, "Section", "Expected Number of Applications", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUExpectedNumberOfApplic' at 112;33.", repo.Login1.SpFormfieldUExpectedNumberOfApplicInfo, new RecordItemIndex(16));
            repo.Login1.SpFormfieldUExpectedNumberOfApplic.Click("112;33");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Login1.SpFormfieldUExpectedNumberOfApplic'.", repo.Login1.SpFormfieldUExpectedNumberOfApplicInfo, new RecordItemIndex(17));
            Keyboard.PrepareFocus(repo.Login1.SpFormfieldUExpectedNumberOfApplic);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Expected_Number_of_Applications' with focus on 'Login1.SpFormfieldUExpectedNumberOfApplic'.", repo.Login1.SpFormfieldUExpectedNumberOfApplicInfo, new RecordItemIndex(18));
            repo.Login1.SpFormfieldUExpectedNumberOfApplic.EnsureVisible();
            Keyboard.Press(Expected_Number_of_Applications);
            Delay.Milliseconds(0);
            
            // Expected Number of Awards
            Report.Log(ReportLevel.Info, "Section", "Expected Number of Awards", new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Login1.SpFormfieldUExpectedNumberOfAwards' at 102;16.", repo.Login1.SpFormfieldUExpectedNumberOfAwardsInfo, new RecordItemIndex(20));
            repo.Login1.SpFormfieldUExpectedNumberOfAwards.Click("102;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Login1.SpFormfieldUExpectedNumberOfAwards'.", repo.Login1.SpFormfieldUExpectedNumberOfAwardsInfo, new RecordItemIndex(21));
            Keyboard.PrepareFocus(repo.Login1.SpFormfieldUExpectedNumberOfAwards);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Expected_Number_of_Awards' with focus on 'Login1.SpFormfieldUExpectedNumberOfAwards'.", repo.Login1.SpFormfieldUExpectedNumberOfAwardsInfo, new RecordItemIndex(22));
            repo.Login1.SpFormfieldUExpectedNumberOfAwards.EnsureVisible();
            Keyboard.Press(Expected_Number_of_Awards);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
